#include <gtest/gtest.h>

#include <plai/logs/logs.hpp>
#include <plai/media/demux.hpp>

using plai::media::Demux;
using plai::media::Packet;

TEST(Ctor, Default) { Demux{}; }

constexpr uint8_t TRIVIAL_PNG[] = {
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
    0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xde, 0x00, 0x00, 0x01,
    0x84, 0x69, 0x43, 0x43, 0x50, 0x49, 0x43, 0x43, 0x20, 0x70, 0x72, 0x6f,
    0x66, 0x69, 0x6c, 0x65, 0x00, 0x00, 0x28, 0x91, 0x7d, 0x91, 0x3d, 0x48,
    0xc3, 0x40, 0x1c, 0xc5, 0x5f, 0x5b, 0xb5, 0xa2, 0x15, 0x51, 0x3b, 0x88,
    0x38, 0x64, 0xa8, 0x4e, 0x76, 0x51, 0x91, 0x8e, 0xb5, 0x0a, 0x45, 0xa8,
    0x10, 0x6a, 0x85, 0x56, 0x1d, 0x4c, 0x2e, 0xfd, 0x10, 0x9a, 0x34, 0x24,
    0x29, 0x2e, 0x8e, 0x82, 0x6b, 0xc1, 0xc1, 0x8f, 0xc5, 0xaa, 0x83, 0x8b,
    0xb3, 0xae, 0x0e, 0xae, 0x82, 0x20, 0xf8, 0x01, 0xe2, 0xec, 0xe0, 0xa4,
    0xe8, 0x22, 0x25, 0xfe, 0x2f, 0x29, 0xb4, 0x88, 0xf1, 0xe0, 0xb8, 0x1f,
    0xef, 0xee, 0x3d, 0xee, 0xde, 0x01, 0xfe, 0x7a, 0x99, 0xa9, 0x66, 0x47,
    0x1c, 0x50, 0x35, 0xcb, 0x48, 0x27, 0x13, 0x42, 0x36, 0xb7, 0x22, 0x04,
    0x5f, 0xd1, 0x8b, 0x2e, 0x0c, 0x22, 0x86, 0x01, 0x89, 0x99, 0xfa, 0xac,
    0x28, 0xa6, 0xe0, 0x39, 0xbe, 0xee, 0xe1, 0xe3, 0xeb, 0x5d, 0x94, 0x67,
    0x79, 0x9f, 0xfb, 0x73, 0xf4, 0x29, 0x79, 0x93, 0x01, 0x3e, 0x81, 0x38,
    0xce, 0x74, 0xc3, 0x22, 0x5e, 0x27, 0x9e, 0xd9, 0xb4, 0x74, 0xce, 0xfb,
    0xc4, 0x61, 0x56, 0x92, 0x14, 0xe2, 0x73, 0xe2, 0x09, 0x83, 0x2e, 0x48,
    0xfc, 0xc8, 0x75, 0xd9, 0xe5, 0x37, 0xce, 0x45, 0x87, 0xfd, 0x3c, 0x33,
    0x6c, 0x64, 0xd2, 0x73, 0xc4, 0x61, 0x62, 0xa1, 0xd8, 0xc6, 0x72, 0x1b,
    0xb3, 0x92, 0xa1, 0x12, 0x4f, 0x13, 0x47, 0x14, 0x55, 0xa3, 0x7c, 0x7f,
    0xd6, 0x65, 0x85, 0xf3, 0x16, 0x67, 0xb5, 0x5c, 0x65, 0xcd, 0x7b, 0xf2,
    0x17, 0x86, 0xf2, 0xda, 0xf2, 0x12, 0xd7, 0x69, 0x8e, 0x22, 0x89, 0x05,
    0x2c, 0x42, 0x84, 0x00, 0x19, 0x55, 0x6c, 0xa0, 0x0c, 0x0b, 0x51, 0x5a,
    0x35, 0x52, 0x4c, 0xa4, 0x69, 0x3f, 0xe1, 0xe1, 0x1f, 0x71, 0xfc, 0x22,
    0xb9, 0x64, 0x72, 0x6d, 0x80, 0x91, 0x63, 0x1e, 0x15, 0xa8, 0x90, 0x1c,
    0x3f, 0xf8, 0x1f, 0xfc, 0xee, 0xd6, 0x2c, 0x4c, 0x4d, 0xba, 0x49, 0xa1,
    0x04, 0xd0, 0xf9, 0x62, 0xdb, 0x1f, 0x63, 0x40, 0x70, 0x17, 0x68, 0xd4,
    0x6c, 0xfb, 0xfb, 0xd8, 0xb6, 0x1b, 0x27, 0x40, 0xe0, 0x19, 0xb8, 0xd2,
    0x5a, 0xfe, 0x4a, 0x1d, 0x88, 0x7d, 0x92, 0x5e, 0x6b, 0x69, 0x91, 0x23,
    0xa0, 0x7f, 0x1b, 0xb8, 0xb8, 0x6e, 0x69, 0xf2, 0x1e, 0x70, 0xb9, 0x03,
    0x0c, 0x3f, 0xe9, 0x92, 0x21, 0x39, 0x52, 0x80, 0xa6, 0xbf, 0x50, 0x00,
    0xde, 0xcf, 0xe8, 0x9b, 0x72, 0xc0, 0xd0, 0x2d, 0xd0, 0xb3, 0xea, 0xf6,
    0xd6, 0xdc, 0xc7, 0xe9, 0x03, 0x90, 0xa1, 0xae, 0x52, 0x37, 0xc0, 0xc1,
    0x21, 0x30, 0x5e, 0xa4, 0xec, 0x35, 0x8f, 0x77, 0x77, 0xb7, 0xf7, 0xf6,
    0xef, 0x99, 0x66, 0x7f, 0x3f, 0xab, 0x9b, 0x72, 0xbd, 0x5e, 0x77, 0xbc,
    0x3b, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x2e,
    0x23, 0x00, 0x00, 0x2e, 0x23, 0x01, 0x78, 0xa5, 0x3f, 0x76, 0x00, 0x00,
    0x00, 0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xe8, 0x0b, 0x06, 0x12, 0x38,
    0x3a, 0xaa, 0x49, 0x4f, 0xd5, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58,
    0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x00, 0x43, 0x72, 0x65,
    0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x47, 0x49,
    0x4d, 0x50, 0x57, 0x81, 0x0e, 0x17, 0x00, 0x00, 0x00, 0x0c, 0x49, 0x44,
    0x41, 0x54, 0x08, 0xd7, 0x63, 0xf8, 0xff, 0xff, 0x3f, 0x00, 0x05, 0xfe,
    0x02, 0xfe, 0xdc, 0xcc, 0x59, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82};
constexpr size_t TRIVIAL_PNG_LEN = 546;

TEST(Demux, PngBuf) {
    plai::logs::init(plai::logs::Level::Trace);
    auto d = Demux(std::span(TRIVIAL_PNG, TRIVIAL_PNG_LEN));
    Packet p{};
    size_t count = 0;
    while (d >> p) ++count;
    ASSERT_EQ(count, 1) << p.size();
}
