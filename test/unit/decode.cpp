#include <gtest/gtest.h>

#include <plai/media/decoder.hpp>
#include <plai/media/demux.hpp>

using plai::media::Decoder;
using plai::media::Demux;
using plai::media::Frame;
using plai::media::Packet;

constexpr uint8_t TRIVIAL_PNG[] = {
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00,
    0x0d, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xde,
    0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x2e,
    0x23, 0x00, 0x00, 0x2e, 0x23, 0x01, 0x78, 0xa5, 0x3f, 0x76, 0x00,
    0x00, 0x00, 0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xe8, 0x07, 0x02,
    0x11, 0x00, 0x00, 0x33, 0x0e, 0xee, 0x93, 0x00, 0x00, 0x00, 0x0c,
    0x49, 0x44, 0x41, 0x54, 0x08, 0xd7, 0x63, 0xf8, 0xff, 0xff, 0x3f,
    0x00, 0x05, 0xfe, 0x02, 0xfe, 0xdc, 0xcc, 0x59, 0xe7, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82};
constexpr size_t TRIVIAL_PNG_LEN = 109;

TEST(Ctor, Default) {
  auto decoder = Decoder();
  (void)decoder;
}

TEST(ImageDecode, Png) {
  Demux d{std::span(TRIVIAL_PNG, TRIVIAL_PNG_LEN)};
  Packet pkt{};
  d >> pkt;

  Decoder decoder{d.streams()[pkt.stream_index()]};
  decoder << pkt;
  Frame res{};
  bool success = decoder >> res;
  ASSERT_TRUE(success);
  ASSERT_EQ(res.width(), 1);
}
